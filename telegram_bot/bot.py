import logging
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters, CallbackQueryHandler, ConversationHandler
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ParseMode
from telegram_bot.handlers.warming_handlers import get_warming_handlers
from config import TELEGRAM_TOKEN, ADMIN_USER_IDS
from telegram_bot.handlers import get_all_handlers
from telegram_bot.handlers.account_handlers import (
    bulk_upload_accounts_file, list_accounts_handler, WAITING_ACCOUNTS_FILE,
    add_account, enter_username, enter_password, enter_email, enter_email_password,
    confirm_add_account, enter_verification_code, cancel_add_account, get_session_stats_handler,
    ENTER_USERNAME, ENTER_PASSWORD, ENTER_EMAIL, ENTER_EMAIL_PASSWORD, CONFIRM_ACCOUNT, ENTER_VERIFICATION_CODE,
    bulk_add_accounts_command, bulk_add_accounts_text
)
from telegram_bot.states import BULK_ADD_ACCOUNTS, WARMING_MENU, WARMING_ACCOUNT_SELECTION, WARMING_SETTINGS
from telegram_bot.handlers.task_handlers import retry_task_callback
from telegram_bot.handlers.profile_handlers import get_profile_handlers, profile_setup_menu
from telegram_bot.handlers.warming_handlers import (
    warming_menu,
    select_warming_account as select_account_for_warming,
    warming_default as start_account_warming,
    warming_status as show_warming_status,
    warming_settings as show_warming_settings
)
#from instagram.clip_upload_patch import *


logger = logging.getLogger(__name__)

def is_admin(user_id):
    return user_id in ADMIN_USER_IDS

def start_handler(update, context):
    user = update.effective_user

    keyboard = [
    [InlineKeyboardButton("üë§ –ê–∫–∫–∞—É–Ω—Ç—ã", callback_data='menu_accounts')],
    [InlineKeyboardButton("üìù –ó–∞–¥–∞—á–∏", callback_data='menu_tasks')],
    [InlineKeyboardButton("üîÑ –ü—Ä–æ–∫—Å–∏", callback_data='menu_proxy')],
    [InlineKeyboardButton("üî• –ü—Ä–æ–≥—Ä–µ–≤", callback_data='menu_warming')],
    [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='menu_help')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(
    f"–ü—Ä–∏–≤–µ—Ç, {user.first_name}! –Ø –±–æ—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Instagram.\n\n"
    f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.",
    reply_markup=reply_markup
    )

def help_handler(update, context):
    help_text = """
*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*

*–ê–∫–∫–∞—É–Ω—Ç—ã:*
/accounts - –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
/add_account - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram
/upload_accounts - –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
/list_accounts - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/profile_setup - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞

*–ó–∞–¥–∞—á–∏:*
/tasks - –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏
/publish_now - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–µ–π—á–∞—Å
/schedule_publish - –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é

*–ü—Ä–æ–∫—Å–∏:*
/proxy - –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏
/add_proxy - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏
/distribute_proxies - –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º
/list_proxies - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏

*–ü—Ä–æ–≥—Ä–µ–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤:*
/warming - –ú–µ–Ω—é –ø—Ä–æ–≥—Ä–µ–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/warm_account - –ü—Ä–æ–≥—Ä–µ—Ç—å –∞–∫–∫–∞—É–Ω—Ç
/warming_stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞

/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
    """

    keyboard = [
    [InlineKeyboardButton("üë§ –ê–∫–∫–∞—É–Ω—Ç—ã", callback_data='menu_accounts')],
    [InlineKeyboardButton("üìù –ó–∞–¥–∞—á–∏", callback_data='menu_tasks')],
    [InlineKeyboardButton("üîÑ –ü—Ä–æ–∫—Å–∏", callback_data='menu_proxy')],
    [InlineKeyboardButton("üî• –ü—Ä–æ–≥—Ä–µ–≤", callback_data='menu_warming')],
    [InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(help_text, parse_mode=ParseMode.MARKDOWN, reply_markup=reply_markup)

def cancel_handler(update, context):
    keyboard = [[InlineKeyboardButton("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data='back_to_main')]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(
    "–û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.",
    reply_markup=reply_markup
    )
    return ConversationHandler.END

def callback_handler(update, context):
    query = update.callback_query
    query.answer()

    try:
        if query.data == 'menu_accounts':
            keyboard = [
            [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data='add_account')],
            [InlineKeyboardButton("üì• –ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data='bulk_add_accounts')],
            [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data='list_accounts')],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–µ—Å—Å–∏–π", callback_data='refresh_session_stats')],
            [InlineKeyboardButton("üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –∞–∫–∫–∞—É–Ω—Ç—ã", callback_data='upload_accounts')],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è", callback_data='profile_setup')],
            [InlineKeyboardButton("üî• –ü—Ä–æ–≥—Ä–µ–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤", callback_data='warming_menu')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            text="üîß *–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
            )

        elif query.data == 'menu_tasks':
            keyboard = [
            [InlineKeyboardButton("üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Å–µ–π—á–∞—Å", callback_data='publish_now')],
            [InlineKeyboardButton("‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é", callback_data='schedule_publish')],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–π", callback_data='publication_stats')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            text="üìù *–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
            )

        elif query.data == 'menu_proxy':
            keyboard = [
            [InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data='add_proxy')],
            [InlineKeyboardButton("üìã –°–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏", callback_data='list_proxies')],
            [InlineKeyboardButton("üîÑ –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–∫—Å–∏", callback_data='distribute_proxies')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            text="üîÑ *–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
            )

        elif query.data == 'menu_warming':
            keyboard = [
            [InlineKeyboardButton("üî• –ü—Ä–æ–≥—Ä–µ—Ç—å –∞–∫–∫–∞—É–Ω—Ç", callback_data='warm_account')],
            [InlineKeyboardButton("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞", callback_data='warming_stats')],
            [InlineKeyboardButton("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ–≥—Ä–µ–≤–∞", callback_data='warming_settings')],
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            text="üî• *–ú–µ–Ω—é –ø—Ä–æ–≥—Ä–µ–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤*\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:",
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
            )

        elif query.data == 'menu_help':
            help_text = """
*–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:*

*–ê–∫–∫–∞—É–Ω—Ç—ã:*
/accounts - –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
/add_account - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –∞–∫–∫–∞—É–Ω—Ç Instagram
/upload_accounts - –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞
/list_accounts - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/profile_setup - –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∞–∫–∫–∞—É–Ω—Ç–∞

*–ó–∞–¥–∞—á–∏:*
/tasks - –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏
/publish_now - –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç —Å–µ–π—á–∞—Å
/schedule_publish - –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—É–±–ª–∏–∫–∞—Ü–∏—é

*–ü—Ä–æ–∫—Å–∏:*
/proxy - –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–∫—Å–∏
/add_proxy - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–∫—Å–∏
/distribute_proxies - –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç—å –ø—Ä–æ–∫—Å–∏ –ø–æ –∞–∫–∫–∞—É–Ω—Ç–∞–º
/list_proxies - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–∫—Å–∏

*–ü—Ä–æ–≥—Ä–µ–≤ –∞–∫–∫–∞—É–Ω—Ç–æ–≤:*
/warming - –ú–µ–Ω—é –ø—Ä–æ–≥—Ä–µ–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
/warm_account - –ü—Ä–æ–≥—Ä–µ—Ç—å –∞–∫–∫–∞—É–Ω—Ç
/warming_stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ–≤–∞

/cancel - –û—Ç–º–µ–Ω–∏—Ç—å —Ç–µ–∫—É—â—É—é –æ–ø–µ—Ä–∞—Ü–∏—é
            """

            keyboard = [
            [InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            text=help_text,
            reply_markup=reply_markup,
            parse_mode=ParseMode.MARKDOWN
            )

        elif query.data == 'back_to_main':
            keyboard = [
            [InlineKeyboardButton("üë§ –ê–∫–∫–∞—É–Ω—Ç—ã", callback_data='menu_accounts')],
            [InlineKeyboardButton("üìù –ó–∞–¥–∞—á–∏", callback_data='menu_tasks')],
            [InlineKeyboardButton("üîÑ –ü—Ä–æ–∫—Å–∏", callback_data='menu_proxy')],
            [InlineKeyboardButton("üî• –ü—Ä–æ–≥—Ä–µ–≤", callback_data='menu_warming')],
            [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='menu_help')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            text="–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –±–æ—Ç–∞ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤ Instagram.\n\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥.",
            reply_markup=reply_markup
            )

        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–µ–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
        elif query.data == 'warm_account':
            return select_account_for_warming(update, context)
        elif query.data == 'warming_stats':
            return show_warming_status(update, context)
        elif query.data == 'warming_settings':
            return show_warming_settings(update, context)
        elif query.data.startswith('warming_account_'):
            return select_account_for_warming(update, context)
        elif query.data.startswith('warming_default_'):
            return start_account_warming(update, context)
        elif query.data == 'warming_menu':
            return warming_menu(update, context)

        elif query.data == 'upload_accounts':
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='menu_accounts')]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ TXT —Ñ–∞–π–ª —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏ Instagram.\n\n"
            "–§–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞:\n"
            "username:password\n"
            "username:password\n"
            "...\n\n"
            "–ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ username:password",
            reply_markup=reply_markup
            )

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–∞
            context.user_data['waiting_for_accounts_file'] = True
            return WAITING_ACCOUNTS_FILE

        elif query.data == 'list_accounts':
            # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            list_accounts_handler(update, context)

        elif query.data == 'refresh_session_stats':
            # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Å—Å–∏–π
            get_session_stats_handler(update, context)

        elif query.data == 'bulk_add_accounts':
            keyboard = [[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='menu_accounts')]]
            reply_markup = InlineKeyboardMarkup(keyboard)

            query.edit_message_text(
            "üì• *–ú–∞—Å—Å–æ–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ Instagram*\n\n"
            "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n"
            "`username:password:email:email_password`\n\n"
            "–ö–∞–∂–¥—ã–π –∞–∫–∫–∞—É–Ω—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ.\n\n"
            "–ü—Ä–∏–º–µ—Ä:\n"
            "`user1:pass1:email1@example.com:email_pass1`\n"
            "`user2:pass2:email2@example.com:email_pass2`\n\n"
            "–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É:\n"
            "`/bulk_add_accounts`\n"
            "–∏ —É–∫–∞–∂–∏—Ç–µ —Å–ø–∏—Å–æ–∫ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã.",
            parse_mode=ParseMode.MARKDOWN,
            reply_markup=reply_markup
            )

            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è —Å–ø–∏—Å–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
            context.user_data['waiting_for_bulk_accounts'] = True
            return BULK_ADD_ACCOUNTS

        elif query.data == 'profile_setup':
            # –í—ã–∑—ã–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
            return profile_setup_menu(update, context)

        elif query.data in ['publication_stats', 'add_proxy', 'list_proxies', 'distribute_proxies']:
            query.edit_message_text(
            text=f"–§—É–Ω–∫—Ü–∏—è '{query.data}' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ.\n\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]])
            )

        else:
            # –î—Ä—É–≥–∏–µ callback_data –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞—Ö
            pass
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ callback_handler: {e}")
        try:
            query.edit_message_text(
                "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üîô –ù–∞–∑–∞–¥", callback_data='back_to_main')]])
            )
        except Exception as inner_e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {inner_e}")

def text_handler(update, context):
    keyboard = [
    [InlineKeyboardButton("üë§ –ê–∫–∫–∞—É–Ω—Ç—ã", callback_data='menu_accounts')],
    [InlineKeyboardButton("üìù –ó–∞–¥–∞—á–∏", callback_data='menu_tasks')],
    [InlineKeyboardButton("üîÑ –ü—Ä–æ–∫—Å–∏", callback_data='menu_proxy')],
    [InlineKeyboardButton("üî• –ü—Ä–æ–≥—Ä–µ–≤", callback_data='menu_warming')],
    [InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å", callback_data='menu_help')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    update.message.reply_text(
    "–Ø –ø–æ–Ω–∏–º–∞—é —Ç–æ–ª—å–∫–æ –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –∏–ª–∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ:",
    reply_markup=reply_markup
    )

def error_handler(update, context):
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—à–∏–±–∫–∏"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ "Query is too old"
    if "Query is too old" in str(context.error):
        logger.warning(f"–£—Å—Ç–∞—Ä–µ–≤—à–∏–π –∑–∞–ø—Ä–æ—Å: {update}")
        return  # –ü—Ä–æ—Å—Ç–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —ç—Ç—É –æ—à–∏–±–∫—É

    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {update}: {context.error}")

    if update and update.effective_chat:
        try:
            context.bot.send_message(
                chat_id=update.effective_chat.id,
                text="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
                parse_mode=ParseMode.MARKDOWN
            )
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ: {e}")

def setup_bot(updater):
    dp = updater.dispatcher

    # –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    dp.add_handler(CommandHandler("start", start_handler))
    dp.add_handler(CommandHandler("help", help_handler))
    dp.add_handler(CommandHandler("cancel", cancel_handler))

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º ConversationHandler –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞
    add_account_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("add_account", add_account),
            CallbackQueryHandler(add_account, pattern='^add_account$')
        ],
        states={
            ENTER_USERNAME: [MessageHandler(Filters.text & ~Filters.command, enter_username)],
            ENTER_PASSWORD: [MessageHandler(Filters.text & ~Filters.command, enter_password)],
            ENTER_EMAIL: [MessageHandler(Filters.text & ~Filters.command, enter_email)],
            ENTER_EMAIL_PASSWORD: [MessageHandler(Filters.text & ~Filters.command, enter_email_password)],
            CONFIRM_ACCOUNT: [CallbackQueryHandler(confirm_add_account, pattern='^confirm_add_account$')],
            ENTER_VERIFICATION_CODE: [MessageHandler(Filters.text & ~Filters.command, enter_verification_code)]
            # –£–¥–∞–ª–∏—Ç–µ —Å—Ç—Ä–æ–∫—É —Å BULK_ADD_ACCOUNTS
        },
        fallbacks=[
            CallbackQueryHandler(cancel_add_account, pattern='^cancel_add_account$'),
            CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern='^menu_accounts$'),
            CommandHandler("cancel", cancel_handler)
        ]
    )

    dp.add_handler(add_account_conv_handler)

    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º ConversationHandler –¥–ª—è –ø—Ä–æ–≥—Ä–µ–≤–∞ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    warming_conv_handler = ConversationHandler(
        entry_points=[
            CommandHandler("warming", warming_menu),
            CommandHandler("warm_account", select_account_for_warming),
            CallbackQueryHandler(warming_menu, pattern='^menu_warming$'),
            CallbackQueryHandler(select_account_for_warming, pattern='^warm_account$')
        ],
        states={
            WARMING_MENU: [
                CallbackQueryHandler(select_account_for_warming, pattern='^warm_account$'),
                CallbackQueryHandler(show_warming_status, pattern='^warming_stats$'),
                CallbackQueryHandler(show_warming_settings, pattern='^warming_settings$'),
                CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern='^back_to_main$')
            ],
            WARMING_ACCOUNT_SELECTION: [
                CallbackQueryHandler(start_account_warming, pattern='^warm_account_'),
                CallbackQueryHandler(warming_menu, pattern='^back_to_warming_menu$')
            ],
            WARMING_SETTINGS: [
                CallbackQueryHandler(warming_menu, pattern='^back_to_warming_menu$')
            ]
        },
        fallbacks=[
            CommandHandler("cancel", cancel_handler),
            CallbackQueryHandler(lambda u, c: ConversationHandler.END, pattern='^back_to_main$')
        ]
    )

    dp.add_handler(warming_conv_handler)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤
    dp.add_handler(CommandHandler("bulk_add_accounts", bulk_add_accounts_command, pass_args=True))

    # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–∑ –º–æ–¥—É–ª–µ–π
    for handler in get_all_handlers():
        dp.add_handler(handler)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–æ—Ñ–∏–ª—è
    for handler in get_profile_handlers():
        dp.add_handler(handler)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –ø—Ä–æ–≥—Ä–µ–≤–∞
    for handler in get_warming_handlers():
        dp.add_handler(handler)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ñ–∞–π–ª–æ–≤ —Å –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏
    dp.add_handler(MessageHandler(
        Filters.document.file_extension("txt"),
        lambda update, context: bulk_upload_accounts_file(update, context) if context.user_data.get('waiting_for_accounts_file', False) else None
    ))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∑–∞–ø—Ä–æ—Å–æ–≤
    dp.add_handler(CallbackQueryHandler(callback_handler))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Å–µ—Å—Å–∏–π
    dp.add_handler(CallbackQueryHandler(get_session_stats_handler, pattern='^refresh_session_stats$'))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–æ–¥–æ–≤ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è
    from telegram_bot.handlers.account_handlers import verification_code_handler
    dp.add_handler(MessageHandler(
        Filters.regex(r'^\d{6}$') & ~Filters.command,
        verification_code_handler
    ))

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–≤—Ç–æ—Ä–∞ –∑–∞–¥–∞—á
    dp.add_handler(CallbackQueryHandler(retry_task_callback, pattern=r'^retry_task_\d+$'))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–¥–æ–≤)
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –º–∞—Å—Å–æ–≤–æ–π –∑–∞–≥—Ä—É–∑–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–æ–≤ —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç
    dp.add_handler(MessageHandler(
        Filters.text & ~Filters.command,
        lambda update, context: bulk_add_accounts_text(update, context) if context.user_data.get('waiting_for_bulk_accounts', False) else text_handler(update, context)
    ))

    dp.add_handler(CommandHandler("warming", lambda update, context: warming_menu(update, context)))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    dp.add_error_handler(error_handler)

    logger.info("–ë–æ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")